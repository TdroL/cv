@import "_mixins";

/**
 * Animations
 */
// primes:
//  2  3  5  7 11  13  17  19  23  29  31  37  41  43  47  53  59  61  67  71
// 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173
$position-1-scale: 0.05;
$position-1-base-pos-x: 960px*(0.6);
$position-1-base-pos-y: 480px*(0.0);
$position-1-rotate: -330deg 150deg 35deg;
$position-1-rotate-axis: 10deg -30deg -60deg;
$position-1-transition-duration: 31s;

$position-2-scale: 0.06;
$position-2-base-pos-x: 960px*(-0.6);
$position-2-base-pos-y: 480px*(-0.1);
$position-2-rotate: 30deg 35deg 30deg;
$position-2-rotate-axis: -30deg -30deg 70deg;
$position-2-transition-duration: 37s;

$position-3-scale: 0.04;
$position-3-base-pos-x: 960px*(0.7);
$position-3-base-pos-y: 480px*(0.3);
$position-3-rotate: 5deg 15deg 40deg;
$position-3-rotate-axis: 30deg 60deg -40deg;
$position-3-transition-duration: 41s;

$transition-to-background-duration: 500ms;
$blur-radius: 50px;

// floating animation
@include keyframes(position-1-in-background) {
	@include in-background-animation(
		$position-1-base-pos-x, $position-1-base-pos-y,
		$position-1-scale, $position-1-rotate, $position-1-rotate-axis,
		(0 0, -44 -19, -78 -18, -95 1, -97 26, -73 68, -26 97, 9 97, 29 73, 27 35));
		//(0 0, 48 64, -64 80, 96 -48, -96 -32)
}

@include keyframes(position-2-in-background) {
	@include in-background-animation(
		$position-2-base-pos-x, $position-2-base-pos-y,
		$position-2-scale, $position-2-rotate, $position-2-rotate-axis,
		(0 0, 34 2, 63 18, 69 48, 52 73, 8 89, -48 80, -66 66, -79 42, -76 16, -52 2));
		//(0 0, 60 -48, 84 24, -24 72, -72 12, 0 -60, 96 48, 36 84)
}

@include keyframes(position-3-in-background) {
	@include in-background-animation(
		$position-3-base-pos-x, $position-3-base-pos-y,
		$position-3-scale, $position-3-rotate, $position-3-rotate-axis,
		(0 0, 19 -23, 26 -48, 18 -75, -4 -88, -33 -87, -72 -66, -88 -36, -84 3, -64 24, -25 20));
		//(0 0, -68 -52, 24 76, 12 -72, -52 76, -80 20)
}

/**
 * Styles
 */

$color-0: #4b4948;
$color-1: #e14f15;
$color-2: #165b91;
$color-3: #65c813;

body {
	margin: 0;
	font: 1em/1.5 Asap, Arial, sans-serif;
	color: #222;
	background-color: mix(#fff, #999);
	overflow-x: hidden;
	min-height: 100%;
}

h1, h2, h3, h4 {
	font-family: "Advent Pro", Arial, sans-serif;
	line-height: 1.2;
	margin: 0 0 0.2em;
}

header {
	h1, h2 {
		line-height: 1;
		text-transform: uppercase;
	}
}

nav li {
	a {
		display: block;
		background: $color-0;

		@include transition(all 0.25s);

		&, &:hover, &:focus, &:visited
		{
			color: #fff;
			font-style: 400;
			text-decoration: none;
		}
	}

	&:nth-of-type(n) a {
		background-color: $color-1;

		+ span.arrow {
			border-top-color: $color-1;
		}
	}

	&:nth-of-type(2n) a {
		background-color: $color-2;

		+ span.arrow {
			border-top-color: $color-2;
		}
	}

	&:nth-of-type(3n) a {
		background-color: $color-3;

		+ span.arrow {
			border-top-color: $color-3;
		}
	}
}

article {
	@include clearfix;
	background: #fff;

	aside {
		padding: 20px;
		@include box-shadow(0 0 5px #999);

		img {
			max-width: 100%;
		}
	}

	ul {
		li {
			list-style: none;
			@include clearfix;

			> span:first-of-type {
				font-weight: bold;
			}

			> span.date {
				display: block;
			}

			> span.label, > span.label + span {
				display: block;
				float: left;
			}

			> span.label + span > span {
				display: block;
			}
		}
	}

	footer p {
		text-align: center;
		font-size: 0.9em;
		margin-bottom: 0.5em;
	}
}

@include respond-to(small) {

	header {
		h1, h2 {
			padding: 5px 3px 0;
		}
	}

	nav {
		a {
			line-height: 1.5;
			padding: 5px;
		}
	}

	article {
		padding: 5px;

		aside {
			text-align: center;
			margin: 10px;
		}

		ul {
			padding: 0;

			li {
				padding-bottom: 0.25em;

				> span.label, > span.label + span {
					width: 50%;
				}
			}

			ul {
				margin: 0 0 0.5em 0.5em;

				li {
					list-style: disc;
				}
			}
		}
	}
}

@include respond-to(medium) {
	header {
		h1, h2 {
			padding: 5px 10px 0;
			display: inline-block;
		}
	}

	nav li {
		a {
			padding: 5px 10px;
		}
	}

	article {
		padding: 10px;

		aside {
			margin: 0 20px 20px 0;
			max-width: 330px;
		}

		// special cases
		@media (min-width: 450px) {

			aside {
				margin: 20px 20px 20px 0;

				display: inline-block;
				@include transform(rotateZ(2.5deg) translateZ(0));
			}

		}

		@media (min-width: 800px) {

			aside {
				display: block;
				float: right;

				.csstransforms3d & {
					position: relative;

					&:before, &:after {
						position: absolute;
						z-index: 2;
						background: #eee;
						display: block;
						content: "";
						width: 100px;
						height: 25px;
						@include box-shadow(0 0 2px #999);
					}

					&:before {
						top: 5px;
						left: -35px;
						@include transform(rotateZ(-35deg));
					}

					&:after {
						bottom: 10px;
						right: -35px;
						@include transform(rotateZ(-45deg));
					}
				}
			}

		}

		ul {
			margin: 0 0 0.5em;

			li {

				> span.label, > span.label + span {
					width: 150px;
				}
			}
		}

		aside + ul {
			float: left;
			width: 300px;
			margin-top: 2em;
		}
	}
}

@include respond-to(wide) {

	body {
		@include background(#999 radial-gradient(#fff, #999) fixed no-repeat);
	}

	$container-width: 960px;

	#container {
		width: $container-width;
		margin: 0 auto;
		padding: 20px 0;
		position: relative;
	}

	header {
		h1, h2 {
			display: inline-block;
		}

		h1 {
			font-size: 2.5em;
			letter-spacing: -0.02em;
		}

		h2 {
			font-weight: 300;
		}
	}

	nav {
		position: relative;
		z-index: 3; // .area: z-index = 2
		@include clearfix;
		height: 75px;

		li {
			$li-width: $container-width / 3;
			float: left;
			width: $li-width;
			position: relative;

			a {
				text-align: center;
				line-height: 50px;
				padding: 0;
			}

			span.arrow {
				position: absolute;
				z-index: -1;
				bottom: 0;
				left: $li-width / 2 - 25px;
				display: block;
				content: "";
				width: 0;
				height: 0;
				border-style: solid;
				border-color: transparent;
				border-width: 25px 25px 0;

				@include transition(all 0.25s);
			}

			&.active span.arrow {
				bottom: -20px;
			}

			&:nth-of-type(n) {
				background: $color-0;

				&.active a, a:hover, a:focus {
					background: $color-1;
				}
			}

			&:nth-of-type(2n) {
				&.active a, a:hover, a:focus {
					background: $color-2;
				}
			}

			&:nth-of-type(3n) {
				&.active a, a:hover, a:focus {
					background: $color-3;
				}
			}
		}
	}

	article {
		@include clearfix;

		h2 {
			font-size: 2em;
		}

		aside {
			float: right;
			margin: 0 20px 20px 0;
			@include transform(rotateZ(2.5deg) translateZ(0));

			.csstransforms3d & {
				position: relative;

				&:before, &:after {
					position: absolute;
					z-index: 2;
					background: #eee;
					display: block;
					content: "";
					width: 100px;
					height: 25px;
					@include box-shadow(0 0 2px #999);
				}

				&:before {
					top: 5px;
					left: -35px;
					@include transform(rotateZ(-35deg));
				}

				&:after {
					bottom: 10px;
					right: -35px;
					@include transform(rotateZ(-45deg));
				}
			}
		}

		ul {
			margin: 0 0 0.5em;

			li {

				> span.label, > span.label + span {
					width: 200px;
				}
			}
		}

		aside + ul {
			float: left;
			width: 400px;
			margin-top: 2em;
		}
	}

	.area {
		$padding: 10px;

		position: relative;
		z-index: 2;
		width: $container-width - 2*$padding;
		margin-bottom: 1em;
		padding: $padding;

		@include box-shadow(0 0 10px #999);
		@include transform(
			translateZ(0)
		, false); // enable the gpu accel.

		.csstransforms3d & {
			// enable transitions for moving area to the background
			@include transition-duration($transition-to-background-duration);
			@include transition-property(transform);
			@include transition-timing-function(cubic-bezier(.1, .5, .5, 1));
			@include filter(none); // remove any filters for areas in foreground

			.wrapper {
				@include transition($transition-to-background-duration all cubic-bezier(.1, .5, .5, 1));
				visibility: visible;
				opacity: 1;

				@include transform(
					translateZ(0)
				, false); // enable the gpu accel.
			}

			&[class*=position] {
				z-index: -2;
				position: absolute;
				top: 0;
				background: #999;
				@include filter(blur(0)); // blur fix for areas flying to the background
				@include box-shadow(0 0 100px #777);

				.wrapper {
					opacity: 0;
				}
			}

			&.in-background {
				@include filter(blur($blur-radius)); // full blur for areas in the background

				.wrapper {
					visibility: hidden;
				}
			}

			&.position-1 {
				@include transform(
						translate3d(
							$position-1-base-pos-x,
							$position-1-base-pos-y,
							0)
						scale($position-1-scale)
						rotateX(nth($position-1-rotate, 1))
						rotateY(nth($position-1-rotate, 2))
						rotateZ(nth($position-1-rotate, 3)),
					false); // move to the background position (transition)

				&.in-background {
					@include animation(position-1-in-background $position-1-transition-duration infinite linear); // add the float animation
				}
			}

			&.position-2 {
				@include transform(
						translate3d(
							$position-2-base-pos-x,
							$position-2-base-pos-y,
							0)
						scale($position-2-scale)
						rotateX(nth($position-2-rotate, 1))
						rotateY(nth($position-2-rotate, 2))
						rotateZ(nth($position-2-rotate, 3)),
					false); // move to the background position (transition)

				&.in-background {
					@include animation(position-2-in-background $position-2-transition-duration infinite linear); // add the float animation
				}
			}

			&.position-3 {
				@include transform(
						translate3d(
							$position-3-base-pos-x,
							$position-3-base-pos-y,
							0)
						scale($position-3-scale)
						rotateX(nth($position-3-rotate, 1))
						rotateY(nth($position-3-rotate, 2))
						rotateZ(nth($position-3-rotate, 3)),
					false); // move to the background position (transition)

				&.in-background {
					@include animation(position-3-in-background $position-3-transition-duration infinite linear); // add the float animation
				}
			}
		}

		.no-csstransforms3d & {
			&[class*=position] {
				display: none;
			}
		}
	}
}
